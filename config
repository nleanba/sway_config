# Read `man 5 sway` for a complete reference.

### Variables

  # Mod4 for Super, Mod1 for Alt
  set $mod Mod4

  # Home row direction keys, like vim
  set $left h
  set $down j
  set $up k
  set $right l

  # Your preferred terminal emulator
  set $term gnome-terminal

  set $fexec exec --no-startup-id fish -c

  # Your preferred application launcher
  # Note: it's recommended that you pass the final command to sway
  # set $menu dmenu_path | dmenu | xargs swaymsg exec --
  # set $menu wofi -S drun -n -s ~/.config/sway/wofi_styles.css | xargs swaymsg exec --
  # set $menuall wofi -S run -n -s ~/.config/sway/wofi_styles.css | xargs swaymsg exec --
  set $menu        rofi -show drun   -config ~/.config/sway/rofi.config | xargs swaymsg exec --
  set $menuall     rofi -show run    -config ~/.config/sway/rofi.config | xargs swaymsg exec --
  set $menussh     rofi -show ssh    -config ~/.config/sway/rofi.config | xargs swaymsg exec --
  set $menuwindows rofi -show window -config ~/.config/sway/rofi.config


### Design

  # Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
  output * bg /usr/share/backgrounds/matt-mcnulty-nyc-2nd-ave.jpg fill

  set $cl_high #009ddc
  set $cl_indi #d9d8d8
  set $cl_back #231f20
  set $cl_fore #d9d8d8
  set $cl_urge #ee2e24

  # Colors                border   bg       text     indi     childborder
  client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
  client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
  client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
  client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

  default_border pixel 1
  default_floating_border pixel 1
  smart_gaps on
  smart_borders on
  gaps outer 0
  gaps inner 0

  #font "Fira Code" 12
  #font "Terminus" 12
  font "Iosevka" 12

### Idle configuration
#
# Example configuration

exec swayidle -w \
    timeout 300 'swaylock -C ~/.config/sway/swaylock.config' \
    timeout 600 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -C ~/.config/sway/swaylock.config'

bindsym $mod+g exec 'swaylock -C ~/.config/sway/swaylock.config'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# output HDMI-A-1 pos 0 0 res 3840 2160

### Input configuration

input "1739:32382:DELL0740:00_06CB:7E7E_Touchpad" {
    dwt enabled
    tap enabled
    tap_button_map lrm
    natural_scroll enabled
    middle_emulation enabled
}

# exec /home/noam/.cargo/bin/rot8

# Hide after       [  ] ms inactiity
seat * hide_cursor 6000

input type:keyboard {
    xkb_layout ch
    xkb_options caps:swapescape,compose:menu
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym Control+Alt+T exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec $menuall
    bindsym $mod+Shift+s exec $menussh
    bindsym $mod+Escape exec $menuwindows

    # Drag windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# screen brightness controls
bindsym XF86MonBrightnessUp exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute        exec --no-startup-id pactl set-sink-mute   @DEFAULT_SINK@ toggle

# Screenshot
    bindsym Print       exec --no-startup-id grim "$HOME/Pictures/Screenshots/screenshot-$(date '+%F-%H%M%S').png"

    # Screenshot region
    bindsym $mod+Print  exec --no-startup-id grim -g "$(slurp)" "$HOME/Pictures/Screenshots/screenshot-$(date '+%F-%H%M%S').png"

    # Screensĥot current output
    bindsym Shift+Print exec --no-startup-id grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "$HOME/Pictures/Screenshots/screenshot-$(date '+%F-%H%M%S').png"

    # Screenshot current window // NOT WORKING YET
    bindsym $mod+P exec --no-startup-id grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" "$HOME/Pictures/Screenshots/screenshot-$(date '+%F-%H%M%S').png"

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right
    # Or use Right Control+[up|down|left|right]
    bindsym Control_R+Left focus left
    bindsym Control_R+Down focus down
    bindsym Control_R+Up focus up
    bindsym Control_R+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
    # Ditto, with arrow keys
    bindsym Control_R+Shift+Left move left
    bindsym Control_R+Shift+Down move down
    bindsym Control_R+Shift+Up move up
    bindsym Control_R+Shift+Right move right
#
# Workspaces:
#
    set $w0 '0:§_STRT'
    set $w1 '1:1_WRK0'
    set $w2 '2:2_WRK1'
    set $w3 '3:3_WRK2'
    set $w4 '4:4_WRK3'
    set $w5 '5:5_EDU0'
    set $w6 '6:6_EDU1'
    set $w7 '7:7_EDU2'
    set $w8 '8:8_EDU3'
    set $w9 '9:9_IDC0'
    set $w10 '10:0_IDC1'
    set $w11 "11:'_IDC2"
    set $w12 '12:^_IDC3'

    # Switch to workspace
    bindsym $mod+section workspace $w0
    bindsym $mod+1 workspace $w1
    bindsym $mod+2 workspace $w2
    bindsym $mod+3 workspace $w3
    bindsym $mod+4 workspace $w4
    bindsym $mod+5 workspace $w5
    bindsym $mod+6 workspace $w6
    bindsym $mod+7 workspace $w7
    bindsym $mod+8 workspace $w8
    bindsym $mod+9 workspace $w9
    bindsym $mod+0 workspace $w10
    bindsym $mod+apostrophe workspace $w11
    bindsym $mod+dead_circumflex workspace $w12
    bindsym $mod+Tab workspace next
    bindsym $mod+Shift+Tab workspace prev
    # Move focused container to workspace
    bindsym $mod+Shift+section move container to workspace $w0
    bindsym $mod+Shift+1 move container to workspace $w1
    bindsym $mod+Shift+2 move container to workspace $w2
    bindsym $mod+Shift+3 move container to workspace $w3
    bindsym $mod+Shift+4 move container to workspace $w4
    bindsym $mod+Shift+5 move container to workspace $w5
    bindsym $mod+Shift+6 move container to workspace $w6
    bindsym $mod+Shift+7 move container to workspace $w7
    bindsym $mod+Shift+8 move container to workspace $w8
    bindsym $mod+Shift+9 move container to workspace $w9
    bindsym $mod+Shift+0 move container to workspace $w10
    bindsym $mod+Shift+apostrophe move container to workspace $w11
    bindsym $mod+Shift+dead_circumflex move container to workspace $w12
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Layout stuff:
#

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    for_window [app_id="org.gnome.Nautilus"] floating enable
    for_window [app_id="org.gnome.baobab"] floating enable
    for_window [app_id="epiphany-snake-90ec00c2b9ab0a18dd4535ea1d8d4b947564ae72"] {
        floating enable
        resize set height 849 px
        resize set width 798 px
    }
 
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    pango_markup enabled
    strip_workspace_numbers yes

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command ~/.config/sway/swaybar.py

    colors {
        statusline #d3d7cf
        background #282C33
        inactive_workspace #282C33 #282C33 #d3d7cf
        focused_workspace #d3d7cf #262626 #d3d7cf
    }
}

#enabling this mainly as the pwoer button otherwise shuts down without warning
exec --no-startup-id /usr/lib/gnome-settings-daemon/gsd-xsettings
exec --no-startup-id /usr/lib/gnome-settings-daemon/gsd-keyboard
exec --no-startup-id /usr/lib/gnome-settings-daemon/gsd-mouse
exec --no-startup-id /usr/lib/gnome-settings-daemon/gsd-media-keys
exec --no-startup-id /usr/lib/gnome-settings-daemon/gsd-sound
exec --no-startup-id /usr/lib/gnome-settings-daemon/gsd-backlight-helper

include /etc/sway/config.d/*
